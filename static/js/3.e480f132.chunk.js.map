{"version":3,"sources":["components/Profile/UserInfo/UserStatus/UserStatus.jsx","components/Profile/UserInfo/UserInfo.jsx","components/Profile/MyPosts/NewPost/AddPostForm/AddPostForm.jsx","components/Profile/MyPosts/NewPost/NewPost.jsx","components/Profile/MyPosts/NewPost/NewPostContainer.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","selectors/profile-selector.js","components/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.jsx"],"names":["UserStatus","userStatus","setUserStatus","updateUserStatus","currentID","useState","editMode","changeMode","onChange","e","currentTarget","value","autoFocus","onBlur","className","type","onDoubleClick","UserInfo","profile","photos","src","large","userPhoto","alt","fullName","lookingForAJob","lookingForAJobDescription","Preloader","AddPostForm","props","initialValues","postText","onSubmit","values","text","setSubmitting","addPost","handleChange","handleSubmit","isSubmitting","name","disabled","NewPost","NewPostContainer","connect","MyPosts","postsData","Post","message","width","likesCount","MyPostsContainer","state","profilePage","map","el","id","Profile","getProfile","getUserStatus","compose","isAuth","getIsAuth","setProfile","isFetchingChange","getUserProfile","requestUserStatus","withAuthRedirect","setCurrentID","useParams","useEffect","mapStateToProps","auth","Component","to"],"mappings":"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","file":"static/js/3.e480f132.chunk.js","sourcesContent":["import './UserStatus.scss';\r\nimport React, { useState } from 'react';\r\n\r\n\r\nconst UserStatus = ({\r\n    userStatus,\r\n    setUserStatus,\r\n    updateUserStatus,\r\n    currentID }) => {\r\n\r\n    const [editMode, changeMode] = useState(false);\r\n\r\n    let onChangeStatus = (e) => {\r\n        setUserStatus(e.currentTarget.value);\r\n    }\r\n\r\n    let finishEdit = (e) => {\r\n        changeMode(false)\r\n        updateUserStatus(e.currentTarget.value);\r\n    }\r\n\r\n    if (currentID != 23462) {\r\n        return <span>{userStatus != null\r\n            ? userStatus\r\n            : 'default status'}</span>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode\r\n                ? <div>\r\n                    <span onDoubleClick={() => changeMode(true)}>{userStatus != null\r\n                        ? userStatus\r\n                        : 'default status'}</span>\r\n                </div>\r\n\r\n                : <div>\r\n                    <input onChange={onChangeStatus} autoFocus={true} onBlur={finishEdit} value={userStatus != null\r\n                        ? userStatus\r\n                        : 'default status'} className='input' type=\"text\" />\r\n                </div>\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default UserStatus","import './UserInfo.scss';\r\nimport userPhoto from '../../../assets/images/userPhoto.png'\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport UserStatus from './UserStatus/UserStatus';\r\n\r\nconst UserInfo = ({\r\n    profile,\r\n    userStatus,\r\n    updateUserStatus,\r\n    setUserStatus,\r\n    currentID }) => {\r\n\r\n    if (!profile || !profile.photos) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div className='userInfo'>\r\n            <div className='userInfo__name'>\r\n                <img src={profile.photos.large != null\r\n                    ? profile.photos.large\r\n                    : userPhoto} alt=\"\" />\r\n                <h2>{profile.fullName}</h2>\r\n                <UserStatus userStatus={userStatus}\r\n                    updateUserStatus={updateUserStatus}\r\n                    setUserStatus={setUserStatus}\r\n                    currentID={currentID} />\r\n            </div>\r\n            <div className='userInfo__block'>\r\n                <div className='userInfo__city'>\r\n                    <h2>Ищет работу: {profile.lookingForAJob === true\r\n                        ? 'Да'\r\n                        : 'Нет'}</h2>\r\n                </div>\r\n                <div className=\"userInfo__birthdate\">\r\n                    <h2>Описание: {profile.lookingForAJobDescription === true\r\n                        ? profile.lookingForAJobDescription\r\n                        : 'Пусто'}</h2>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserInfo;","import './AddPostForm.scss';\r\nimport { Formik } from 'formik';\r\n\r\nconst AddPostForm = (props) => {\r\n\r\n    let addPost = (text) => {\r\n        props.addPost(text);\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{ postText: '' }}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n                addPost(values.postText);\r\n                values.postText = '';\r\n                setSubmitting(false);\r\n\r\n            }}>\r\n            {({\r\n                values,\r\n                handleChange,\r\n                handleSubmit,\r\n                isSubmitting\r\n            }) =>\r\n            (<form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <input\r\n                        className=\"newPost__input\"\r\n                        type=\"text\"\r\n                        name=\"postText\"\r\n                        onChange={handleChange}\r\n                        value={values.postText}\r\n                    />\r\n                </div>\r\n                {/* <Button\r\n                    endIcon={<PostAddIcon />}\r\n                    className='action-btn'\r\n                    variant='contained'\r\n                    type=\"submit\"\r\n                    disabled={isSubmitting}\r\n                >\r\n                    Добавить пост\r\n                </Button> */}\r\n                <button\r\n                    className=\"newPost__button button\"\r\n                    type=\"submit\"\r\n                    disabled={isSubmitting}\r\n                >\r\n                    Add post\r\n                </button>\r\n\r\n            </form>)}\r\n        </Formik>\r\n    )\r\n}\r\n\r\n{/* <button\r\nclassName=\"newPost__button button\"\r\ntype=\"submit\"\r\ndisabled={isSubmitting}\r\n>\r\nДобавить пост\r\n</button> */}\r\n\r\nexport default AddPostForm","import './NewPost.scss';\r\nimport React from 'react';\r\nimport AddPostForm from './AddPostForm/AddPostForm';\r\n\r\nconst NewPost = ({ addPost }) => {\r\n    return (\r\n        <AddPostForm addPost={addPost} />\r\n    );\r\n}\r\n\r\nexport default NewPost;","import { connect } from 'react-redux';\r\nimport { addPost } from '../../../../redux/profileReducer';\r\nimport NewPost from './NewPost';\r\n\r\nconst NewPostContainer = connect(null, {\r\n    addPost\r\n})(NewPost);\r\n\r\nexport default NewPostContainer;","import './MyPosts.scss';\r\nimport NewPostContainer from './NewPost/NewPostContainer';\r\n\r\nconst MyPosts = ({ postsData }) => {\r\n    return (\r\n        <div className='myPosts'>\r\n            <div className='myPosts__posts'>\r\n                <NewPostContainer />\r\n                {postsData}\r\n            </div>\r\n            <div className='myPosts__block'>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MyPosts;","import './Post.scss';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className='post'>\r\n            <div className='post__row'>\r\n                <div className='post__img'>\r\n                    <img src=\"https://cdn3.iconfinder.com/data/icons/avatars-round-flat/33/avat-01-512.png\" alt=\"\" />\r\n                </div>\r\n                <div className='post__text'>\r\n                    {props.message}\r\n                </div>\r\n                <div className='post__likes'>\r\n                    <img src=\"https://www.iconpacks.net/icons/2/free-instagram-like-icon-3507-thumb.png\" width=\"24px\" alt=\"\" /> {props.likesCount}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import MyPosts from './MyPosts';\r\nimport { connect } from 'react-redux';\r\nimport Post from './Post/Post';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData\r\n            .map(el => <Post key={el.id} message={el.message} likesCount={el.likesCount} />)\r\n    };\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, null)(MyPosts);\r\n\r\n\r\nexport default MyPostsContainer;","import './Profile.scss';\r\nimport UserInfo from './UserInfo/UserInfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = ({\r\n    profile,\r\n    userStatus,\r\n    updateUserStatus,\r\n    setUserStatus,\r\n    currentID }) => {\r\n\r\n    return (\r\n        <div className='profile'>\r\n            <UserInfo profile={profile}\r\n                userStatus={userStatus}\r\n                updateUserStatus={updateUserStatus}\r\n                setUserStatus={setUserStatus}\r\n                currentID={currentID} />\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","export const getProfile = (state) => state.profilePage.profile\r\n\r\nexport const getUserStatus = (state) => state.profilePage.userStatus","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    setProfile,\r\n    getUserProfile,\r\n    requestUserStatus,\r\n    updateUserStatus,\r\n    setUserStatus\r\n} from '../../redux/profileReducer';\r\nimport Profile from './Profile';\r\nimport { isFetchingChange } from '../../redux/usersReducer';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n    getProfile,\r\n    getUserStatus,\r\n} from '../../selectors/profile-selector';\r\nimport { getIsAuth } from '../../selectors/auth-selector';\r\n\r\nconst ProfileContainer = ({ \r\n    getUserProfile, \r\n    requestUserStatus, \r\n    profile, \r\n    userStatus, \r\n    updateUserStatus, \r\n    setUserStatus }) => {\r\n\r\n    const [currentID, setCurrentID] = useState(null);\r\n\r\n    let { id } = useParams();\r\n    useEffect(() => {\r\n        if (!id) {\r\n            id = '23462';\r\n\r\n        }\r\n        getUserProfile(id);\r\n        requestUserStatus(id);\r\n        setCurrentID(id)\r\n    }, [])\r\n\r\n    return (\r\n        <div className='profile'>\r\n            <Profile \r\n                profile={profile}\r\n                userStatus={userStatus}\r\n                updateUserStatus={updateUserStatus}\r\n                setUserStatus={setUserStatus} \r\n                currentID={currentID}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: getProfile(state),\r\n        isAuth: getIsAuth(state),\r\n        userStatus: getUserStatus(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        setProfile,\r\n        isFetchingChange,\r\n        getUserProfile,\r\n        requestUserStatus,\r\n        updateUserStatus,\r\n        setUserStatus\r\n    }),\r\n    withAuthRedirect\r\n)(ProfileContainer)\r\n","import { connect } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    let RedirectComponent = (props) => {\r\n        if (!props.isAuth) return <Navigate to='/login' />\r\n        return <Component {...props}/>\r\n    }\r\n\r\n    const AuthRedirectComponent = connect(mapStateToProps, {})(RedirectComponent);\r\n\r\n    return AuthRedirectComponent\r\n}\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}