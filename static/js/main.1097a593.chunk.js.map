{"version":3,"sources":["api/api.js","selectors/auth-selector.js","assets/images/preloader.gif","components/Common/Preloader/Preloader.jsx","assets/images/userPhoto.png","redux/profileReducer.js","redux/usersReducer.js","redux/dialogsReducer.js","reportWebVitals.js","components/News/News.jsx","components/Settings/Settings.jsx","components/Music/Music.jsx","components/Nav/FriendsBar/FriendsItem/FriendsItem.jsx","components/Nav/FriendsBar/FriendsBar.jsx","components/Nav/Nav.jsx","components/Nav/FriendsBar/FriendsBarContainer.jsx","assets/images/logo.jpg","components/Header/Header.jsx","redux/authReducer.js","components/Header/HeaderContainer.jsx","components/Login/LoginForm/LoginForm.jsx","components/Login/Login.jsx","redux/appReducer.js","App.js","redux/sidebarReducer.js","redux/store-redux.js","index.js"],"names":["instance","axios","baseURL","withCredentials","headers","usersApi","getUsers","currentPageNumber","maxPageSize","get","followUser","userID","post","unfollowUser","delete","profileApi","getProfile","requestUserStatus","updateUserStatus","status","put","authApi","auth","login","email","password","rememberMe","logout","getIsAuth","state","isAuth","getLogin","Preloader","src","preloader","ADD_POST","SET_PROFILE","SET_USER_STATUS","initialState","postsData","id","message","likesCount","profile","userStatus","addPost","text","type","setProfile","setUserStatus","getUserProfile","dispatch","a","response","data","body","resultCode","profileReducer","action","newPostText","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_MAX_USERS_COUNT","IS_FETCHING","IS_FOLLOWING_PROCESS","users","maxUsersCount","isFetching","isFollowingProcess","follow","unfollow","setCurrentPage","isFetchingChange","isFollowingProcessChange","items","totalCount","usersReducer","map","user","followed","filter","ADD_MESSAGE","usersData","name","messagesData","addMessage","dialogsReducer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","News","Settings","Music","FriendsItem","props","className","FriendsBar","friendsData","el","Nav","connect","sidebar","navData","isActive","to","Header","href","logo","alt","onClick","userPhoto","SET_DATA","setData","authProcess","authReducer","LoginForm","initialValues","checkbox","onSubmit","values","setSubmitting","handleChange","handleSubmit","isSubmitting","placeholder","onChange","value","disabled","INITIAL_PROCESS","isInitialized","appReducer","ProfileContainer","React","lazy","DialogsContainer","UsersContainer","app","initialization","promise","Promise","all","useEffect","Suspense","fallback","path","element","replace","sidebarReducer","require","createStore","combineReducers","applyMiddleware","store","dialogsPage","profilePage","usersPage","thunkMiddleware","window","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qGAAA,kHAEMA,EAAWC,SAAa,CAC1BC,QAAS,gDACTC,iBAAiB,EACjBC,QAAS,CAEL,UAAW,0CAINC,EAAW,CACpBC,SADoB,SACXC,EAAmBC,GACxB,OAAOR,EAASS,IAAT,qBAA2BF,EAA3B,kBAAsDC,KAGjEE,WALoB,SAKTC,GACP,OAAOX,EAASY,KAAT,iBAAwBD,KAGnCE,aAToB,SASPF,GACT,OAAOX,EAASc,OAAT,iBAA0BH,MAI5BI,EAAa,CACtBC,WADsB,SACXL,GACP,OAAOX,EAASS,IAAT,kBAAwBE,KAGnCM,kBALsB,SAKJN,GACd,OAAOX,EAASS,IAAT,yBAA+BE,KAG1CO,iBATsB,SASLC,GACb,OAAOnB,EAASoB,IAAT,iBAA+B,CAACD,OAAQA,MAK1CE,EAAU,CACnBC,KADmB,WAEf,OAAOtB,EAASS,IAAT,YAGXc,MALmB,SAKbC,EAAOC,GAA+B,IAArBC,EAAoB,wDACvC,OAAO1B,EAASY,KAAT,aAA4B,CAACY,QAAOC,WAAUC,gBAGzDC,OATmB,WAUf,OAAO3B,EAASc,OAAT,iB,gCClDf,oEAAO,IAAMc,EAAY,SAACC,GAAD,OAAWA,EAAMP,KAAKQ,QAElCC,EAAW,SAACF,GAAD,OAAWA,EAAMP,KAAKC,Q,gCCF/B,UAA0B,sC,OCM1BS,IAJG,WACd,OAAO,qBAAKC,IAAKC,M,gCCHN,QAA0B,uC,8RCEnCC,EAAW,mBACXC,EAAc,sBACdC,EAAkB,0BAEpBC,EAAe,CACfC,UAAW,CACP,CAAEC,GAAI,EAAGC,QAAS,eAAgBC,WAAY,GAC9C,CAAEF,GAAI,EAAGC,QAAS,2BAA4BC,WAAY,GAC1D,CAAEF,GAAI,EAAGC,QAAS,8BAA+BC,WAAY,KAEjEC,QAAS,GACTC,WAAY,IA4BHC,EAAU,SAACC,GAAD,MAAW,CAAEC,KAAMZ,EAAUW,SACvCE,EAAa,SAACL,GAAD,MAAc,CAAEI,KAAMX,EAAaO,YAChDM,EAAgB,SAACL,GAAD,MAAiB,CAAEG,KAAMV,EAAiBO,eAE1DM,EAAiB,SAACvC,GAC3B,8CAAO,WAAOwC,GAAP,eAAAC,EAAA,sEACkBrC,IAAWC,WAAWL,GADxC,OACC0C,EADD,OAEHF,EAASH,EAAWK,EAASC,OAF1B,2CAAP,uDAMSrC,EAAoB,SAACN,GAC9B,8CAAO,WAAOwC,GAAP,eAAAC,EAAA,sEACkBrC,IAAWE,kBAAkBN,GAD/C,OACC0C,EADD,OAEHF,EAASF,EAAcI,EAASC,OAF7B,2CAAP,uDAMSpC,EAAmB,SAACqC,GAC7B,8CAAO,WAAOJ,GAAP,SAAAC,EAAA,sEACkBrC,IAAWG,iBAAiBqC,GAD9C,OAG8B,IAH9B,OAGUD,KAAKE,YACdL,EAASF,EAAcM,IAJxB,2CAAP,uDASWE,IApDe,WAAmC,IAAlC5B,EAAiC,uDAAzBS,EAAcoB,EAAW,uCAC5D,OAAQA,EAAOX,MACX,KAAKZ,EACD,OAAO,2BACAN,GADP,IAEIU,UAAU,GAAD,mBAAMV,EAAMU,WAAZ,CAAuB,CAAEC,GAAI,EAAGC,QAASiB,EAAOZ,KAAMJ,WAAY,KAC3EiB,YAAa,KAGrB,KAAKvB,EACD,OAAO,2BACAP,GADP,IAEIc,QAASe,EAAOf,UAExB,KAAKN,EACD,OAAO,2BACAR,GADP,IAEIe,WAAYc,EAAOd,aAE3B,QACI,OAAOf,K,4PCnCb+B,EAAS,eACTC,EAAW,iBACXC,EAAY,kBACZC,EAAmB,yBACnBC,EAAsB,4BACtBC,EAAc,oBACdC,EAAuB,6BAEzB5B,EAAe,CACf6B,MAAO,GACPC,cAAe,IACf5D,YAAa,EACbD,kBAAmB,EACnB8D,YAAY,EACZC,mBAAoB,IAqDXC,EAAS,SAAC5D,GAAD,MAAa,CAAEoC,KAAMa,EAAQjD,WACtC6D,EAAW,SAAC7D,GAAD,MAAa,CAAEoC,KAAMc,EAAUlD,WAE1C8D,EAAiB,SAAClE,GAAD,MAAwB,CAAEwC,KAAMgB,EAAkBxD,sBAEnEmE,EAAmB,SAACL,GAAD,MAAiB,CAAEtB,KAAMkB,EAAaI,eACzDM,EAA2B,SAACL,EAAoB3D,GAArB,MAAiC,CAAEoC,KAAMmB,EAAsBI,qBAAoB3D,WAE9GL,EAAW,SAACC,EAAmBC,GACxC,8CAAO,WAAO2C,GAAP,eAAAC,EAAA,6DACHD,EAASuB,GAAiB,IADvB,SAEkBrE,IAASC,SAASC,EAAmBC,GAFvD,OAEC6C,EAFD,OAGHF,GAViBgB,EAUCd,EAASC,KAAKsB,MAVJ,CAAE7B,KAAMe,EAAWK,WAW/ChB,GATyBiB,EASCf,EAASC,KAAKuB,WATI,CAAE9B,KAAMiB,EAAqBI,mBAUzEjB,EAASuB,GAAiB,IALvB,iCALqB,IAACN,EAFRD,IAOd,OAAP,uDASSzD,EAAa,SAACC,GACvB,8CAAO,WAAOwC,GAAP,eAAAC,EAAA,sEACkB/C,IAASK,WAAWC,GADtC,OACC0C,EADD,OAEHF,EAASwB,GAAyB,EAAMhE,IAEP,IAA7B0C,EAASC,KAAKE,aACdL,EAASoB,EAAO5D,IAChBwC,EAASwB,GAAyB,EAAOhE,KAN1C,2CAAP,uDAWSE,EAAe,SAACF,GACzB,8CAAO,WAAOwC,GAAP,eAAAC,EAAA,sEACkB/C,IAASQ,aAAaF,GADxC,OACC0C,EADD,OAEHF,EAASwB,GAAyB,EAAMhE,IAEP,IAA7B0C,EAASC,KAAKE,aACdL,EAASqB,EAAS7D,IAClBwC,EAASwB,GAAyB,EAAOhE,KAN1C,2CAAP,uDAWWmE,IA5Fa,WAAmC,IAAlCjD,EAAiC,uDAAzBS,EAAcoB,EAAW,uCAC1D,OAAQA,EAAOX,MACX,KAAKa,EACD,OAAO,2BACA/B,GADP,IAEIsC,MAAOtC,EAAMsC,MAAMY,KAAI,SAAAC,GACnB,OAAIA,EAAKxC,KAAOkB,EAAO/C,OACZ,2BAAKqE,GAAZ,IAAkBC,UAAU,IAEzBD,OAGnB,KAAKnB,EACD,OAAO,2BACAhC,GADP,IAEIsC,MAAOtC,EAAMsC,MAAMY,KAAI,SAAAC,GACnB,OAAIA,EAAKxC,KAAOkB,EAAO/C,OACZ,2BAAKqE,GAAZ,IAAkBC,UAAU,IAEzBD,OAGnB,KAAKlB,EACD,OAAO,2BACAjC,GADP,IACcsC,MAAM,YAAKT,EAAOS,SAEpC,KAAKJ,EACD,OAAO,2BACAlC,GADP,IACctB,kBAAmBmD,EAAOnD,oBAE5C,KAAKyD,EACD,OAAO,2BACAnC,GADP,IACcuC,cAAeV,EAAOU,gBAExC,KAAKH,EACD,OAAO,2BACApC,GADP,IACcwC,WAAYX,EAAOW,aAErC,KAAKH,EACD,OAAO,2BACArC,GADP,IAEIyC,mBAAoBZ,EAAOY,mBAAP,sBACVzC,EAAMyC,oBADI,CACgBZ,EAAO/C,SACrCkB,EAAMyC,mBAAmBY,QAAO,SAAA1C,GAAE,OAAIA,IAAOkB,EAAO/C,YAElE,QACI,OAAOkB,K,0GCjEbsD,EAAc,sBAEhB7C,EAAe,CACf8C,UAAW,CACP,CAAE5C,GAAI,EAAG6C,KAAM,SACf,CAAE7C,GAAI,EAAG6C,KAAM,QACf,CAAE7C,GAAI,EAAG6C,KAAM,WAGnBC,aAAc,CACV,CAAE9C,GAAI,EAAGC,QAAS,SAClB,CAAED,GAAI,EAAGC,QAAS,YAClB,CAAED,GAAI,EAAGC,QAAS,SAiBb8C,EAAa,SAAC9C,GAAD,MAAc,CAAEM,KAAMoC,EAAa1C,YAE9C+C,IAdQ,WAAmC,IAAlC3D,EAAiC,uDAAzBS,EAAcoB,EAAW,uCACrD,OAAQA,EAAOX,OACNoC,EACM,2BACAtD,GADP,IAEIyD,aAAa,GAAD,mBAAMzD,EAAMyD,cAAZ,CAA0B,CAAE9C,GAAI,EAAGC,QAASiB,EAAOjB,aAG5DZ,I,wRCbJ4D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,4DCGCQ,EARF,WACT,OACI,wCCMOC,G,MARE,WACb,OACI,6CCMOC,G,MARD,WACV,OACI,0C,cCMOC,G,kBARK,SAACC,GACjB,OACI,qBAAKC,UAAU,cAAf,SACKD,EAAMjB,SCaJmB,EAfI,SAACF,GAEMA,EAAMG,YACvB1B,KAAI,SAAA2B,GAAE,OAAI,cAAC,EAAD,CAAalE,GAAIkE,EAAGlE,GAAI6C,KAAMqB,EAAGrB,UAChD,OAEI,sBAAKkB,UAAU,aAAf,UACI,yCACA,qBAAKA,UAAU,wB,QCUZI,GCLaC,aAZN,SAAC/E,GACnB,MAAO,CACH4E,YAAa5E,EAAMgF,QAAQJ,gBAIV,SAACtD,GACtB,MAAO,KAKiByD,CAA6CJ,GDZ7D,SAACF,GACT,OACI,qBAAKC,UAAU,MAAf,SACI,+BACI,mCAAK,cAAC,IAAD,CAASA,UAAW,SAAAO,GAAO,OAAIA,EAAQC,SAAW,mBAAqB,aAAaC,GAAG,WAAvF,qBAAL,OACA,mCAAK,cAAC,IAAD,CAAST,UAAW,SAAAO,GAAO,OAAIA,EAAQC,SAAW,mBAAqB,aAAaC,GAAG,SAAvF,mBAAL,OACA,mCAAK,cAAC,IAAD,CAAST,UAAW,SAAAO,GAAO,OAAIA,EAAQC,SAAW,mBAAqB,aAAaC,GAAG,WAAvF,sBAAL,OACA,mCAAK,cAAC,IAAD,CAAST,UAAW,SAAAO,GAAO,OAAIA,EAAQC,SAAW,mBAAqB,aAAaC,GAAG,QAAvF,kBAAL,OACA,mCAAK,cAAC,IAAD,CAAST,UAAW,SAAAO,GAAO,OAAIA,EAAQC,SAAW,mBAAqB,aAAaC,GAAG,SAAvF,mBAAL,OACA,mCAAK,cAAC,IAAD,CAAST,UAAW,SAAAO,GAAO,OAAIA,EAAQC,SAAW,mBAAqB,aAAaC,GAAG,YAAvF,sBAAL,c,uBEbD,MAA0B,iCC6B1BC,EAxBA,SAAC,GAGE,IAFdnF,EAEa,EAFbA,OACAP,EACa,EADbA,MACAI,EAAa,EAAbA,OAEA,OACI,yBAAQ4E,UAAU,SAAlB,UACI,8BACI,mBAAGW,KAAK,IAAR,SACI,qBAAKX,UAAU,eAAetE,IAAKkF,EAAMC,IAAI,aAGrD,sBAAKb,UAAU,oBAAf,UACKzE,EACK,gCAAMP,EAAM,wBACd8F,QAAS1F,EADK,uBAEZ,cAAC,IAAD,CAASqF,GAAI,SAAb,mBAEN,qBAAK/E,IAAKqF,IAAWF,IAAI,Y,+BCrBnCG,EAAW,gBAEbjF,EAAe,CACfE,GAAI,KACJhB,MAAO,KACPD,MAAO,KACPO,QAAQ,GAgBC0F,EAAU,SAAChF,EAAIhB,EAAOD,EAAOO,GAAnB,MAA+B,CAAEiB,KAAMwE,EAAUjE,KAAM,CAAEd,KAAIhB,QAAOD,QAAOO,YAErF2F,EAAc,WACvB,8CAAO,WAAOtE,GAAP,uBAAAC,EAAA,sEACkB/B,IAAQC,OAD1B,OAG8B,KAF7B+B,EADD,QAGUC,KAAKE,aAAmB,EACNH,EAASC,KAAKA,KAAnCd,EAD0B,EAC1BA,GAAIhB,EADsB,EACtBA,MAAOD,EADe,EACfA,MACjB4B,EAASqE,EAAQhF,EAAIhB,EAAOD,GAAO,KALpC,2CAAP,uDA8BWmG,EA9CK,WAAmC,IAAlC7F,EAAiC,uDAAzBS,EAAcoB,EAAW,uCAClD,OAAQA,EAAOX,OACNwE,EACM,2BACA1F,GACA6B,EAAOJ,MAIPzB,G,QCHJ+E,eAPS,SAAC/E,GACrB,MAAO,CACHC,OAAQF,YAAUC,GAClBN,MAAOQ,YAASF,MAIgB,CACpCF,OD6BkB,WAClB,8CAAO,WAAOwB,GAAP,SAAAC,EAAA,sEACkB/B,IAAQM,SAD1B,OAG8B,IAH9B,OAGU2B,KAAKE,YACdL,EAASqE,EAAQ,KAAM,KAAM,MAAM,IAJpC,2CAAP,wDC/BWZ,EAXS,SAACN,GACjB,OAAO,cAAC,EAAD,eAAYA,O,gBCiDZqB,G,MArDG,SAAC,GAAe,IAAbpG,EAAY,EAAZA,MACjB,OACI,cAAC,IAAD,CACIqG,cAAe,CAAEpG,MAAO,GAAIC,SAAU,GAAIoG,UAAU,GACpDC,SAAU,SAACC,EAAD,IACNC,EADqC,EAApBA,gBACH,GACdzG,EAAMwG,EAAOvG,MAAOuG,EAAOtG,SAAUsG,EAAOF,WAJpD,SAMK,gBACGE,EADH,EACGA,OACAE,EAFH,EAEGA,aACAC,EAHH,EAGGA,aACAC,EAJH,EAIGA,aAJH,OAMA,uBAAML,SAAUI,EAAhB,UACG,uBACI3B,UAAU,2BACVxD,KAAM,QACNsC,KAAK,QACL+C,YAAY,QACZC,SAAUJ,EACVK,MAAOP,EAAOvG,QAElB,uBACI+E,UAAU,2BACVxD,KAAK,WACLsC,KAAK,WACL+C,YAAY,WACZC,SAAUJ,EACVK,MAAOP,EAAOtG,WAElB,sBAAK8E,UAAU,kBAAf,oBAEI,uBACIxD,KAAK,WACLsC,KAAK,WACLgD,SAAUJ,EACVK,MAAOP,EAAOF,cAGtB,wBACItB,UAAU,6BACVxD,KAAK,SACLwF,SAAUJ,EAHd,4BCfDvB,eANS,SAAC/E,GACrB,MAAO,CACHC,OAAQF,YAAUC,MAIc,CACpCN,MHQiB,SAACC,EAAOC,EAAUC,GACnC,8CAAO,WAAOyB,GAAP,SAAAC,EAAA,sEACkB/B,IAAQE,MAAMC,EAAOC,EAAUC,GADjD,OAG8B,IAH9B,OAGU4B,KAAKE,YACdL,EAASsE,KAJV,2CAAP,wDGVWb,EArBD,SAAC,GAAwB,IAAtB9E,EAAqB,EAArBA,OAAQP,EAAa,EAAbA,MACrB,OAAe,IAAXO,EACO,cAAC,IAAD,CAAUkF,GAAI,aAIrB,qBAAKT,UAAU,QAAf,SACI,sBAAKA,UAAU,eAAf,UACI,uCACA,cAAC,EAAD,CAAWhF,MAAOA,YCd5BiH,EAAkB,sBAEpBlG,EAAe,CACfmG,eAAe,GA4BJC,EAzBI,WAAmC,IAAlC7G,EAAiC,uDAAzBS,EAAcoB,EAAW,uCACjD,OAAQA,EAAOX,OACNyF,EACM,2BACA3G,GADP,IAEI4G,eAAe,IAGZ5G,G,QCAb8G,EAAmBC,IAAMC,MAAK,kBAAM,iCACpCC,EAAmBF,IAAMC,MAAK,kBAAM,iCACpCE,EAAiBH,IAAMC,MAAK,kBAAM,iCAwCzBjC,eANS,SAAC/E,GACvB,MAAO,CACL4G,cAAe5G,EAAMmH,IAAIP,iBAIW,CACtCQ,eDrC4B,WAC1B,OAAO,SAAC9F,GACJ,IAAI+F,EAAU/F,EAASsE,KAEvB0B,QAAQC,IAAI,CAACF,IAAUtD,MAAK,WACxBzC,EAPyB,CAAEJ,KAAMyF,UCsC9B5B,EAtCH,SAACN,GAKX,OAJA+C,qBAAU,WACR/C,EAAM2C,mBACL,IAEE3C,EAAMmC,cAKT,sBAAKlC,UAAU,UAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,qBAAKA,UAAU,gBAAf,SACE,cAAC,IAAM+C,SAAP,CAAgBC,SAAU,cAACvH,EAAA,EAAD,IAA1B,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOwH,KAAK,YAAYC,QAAS,cAACd,EAAD,MACjC,cAAC,IAAD,CAAOa,KAAK,eAAeC,QAAS,cAACd,EAAD,MACpC,cAAC,IAAD,CAAOa,KAAK,SAASC,QAAS,cAACV,EAAD,MAC9B,cAAC,IAAD,CAAOS,KAAK,aAAaC,QAAS,cAACX,EAAD,MAClC,cAAC,IAAD,CAAOU,KAAK,UAAUC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,WAAWC,QAAS,cAAC,EAAD,MAChC,cAAC,IAAD,CAAOD,KAAK,cAAcC,QAAS,cAAC,EAAD,MACnC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,cAAC,IAAD,CAAUzC,GAAG,WAAW0C,SAAO,MACxD,cAAC,IAAD,CAAOF,KAAK,WAAWC,QAAS,cAAC,EAAD,gBAlBjC,cAACzH,EAAA,EAAD,O,gBC1BPM,EAAe,CACfmE,YAAa,CACT,CAAEpB,KAAM,QACR,CAAEA,KAAM,QACR,CAAEA,KAAM,SAQDsE,EAJe,WAAmC,IAAlC9H,EAAiC,uDAAzBS,EACnC,OAAOT,G,gBCDX,EAA0D+H,EAAQ,IAA1DC,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,gBAAiBC,EAAtC,EAAsCA,gBAWlCC,GAAQH,EATGC,EAAgB,CAC3BG,YAAazE,IACb0E,YAAazG,IACboD,QAAS8C,EACTQ,UAAWrF,IACXxD,KAAMoG,EACNsB,IAAKN,IAGyBqB,EAAgBK,MAElDC,OAAOL,MAAQA,GAEAA,UCdfM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAUR,MAAOA,GAAjB,SACE,cAAC,EAAD,UAINS,SAASC,eAAe,SAG1BjF,M","file":"static/js/main.1097a593.chunk.js","sourcesContent":["import * as axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        // 'API-KEY': '29e0a73c-1ae5-4aea-ad00-7b4e7d4d7efa'\r\n        'API-KEY': 'b6cafa4a-4de8-4e4c-9122-da31bae55591'\r\n    }\r\n})\r\n\r\nexport const usersApi = {\r\n    getUsers(currentPageNumber, maxPageSize) {\r\n        return instance.get(`users?page=${currentPageNumber}&count=${maxPageSize}`)\r\n    },\r\n\r\n    followUser(userID) {\r\n        return instance.post(`follow/${userID}`)\r\n    },\r\n\r\n    unfollowUser(userID) {\r\n        return instance.delete(`follow/${userID}`)\r\n    }\r\n}\r\n\r\nexport const profileApi = {\r\n    getProfile(userID) {\r\n        return instance.get(`profile/${userID}`)\r\n    },\r\n\r\n    requestUserStatus(userID) {\r\n        return instance.get(`profile/status/${userID}`)\r\n    },\r\n\r\n    updateUserStatus(status) {\r\n        return instance.put(`profile/status`, {status: status})\r\n    }\r\n    \r\n}\r\n\r\nexport const authApi = {\r\n    auth() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    }\r\n}","export const getIsAuth = (state) => state.auth.isAuth\r\n\r\nexport const getLogin = (state) => state.auth.login","export default __webpack_public_path__ + \"static/media/preloader.df66b519.gif\";","import preloader from '../../../assets/images/preloader.gif';\r\n\r\nconst Preloader = () => {\r\n    return <img src={preloader}/> \r\n}\r\n\r\nexport default Preloader;","export default __webpack_public_path__ + \"static/media/userPhoto.10691648.png\";","import { profileApi } from \"../api/api\";\r\n\r\nconst ADD_POST = 'profile/ADD-POST';\r\nconst SET_PROFILE = 'profile/SET_PROFILE';\r\nconst SET_USER_STATUS = 'profile/SET_USER_STATUS';\r\n\r\nlet initialState = {\r\n    postsData: [\r\n        { id: 1, message: 'Hello world!', likesCount: 7 },\r\n        { id: 2, message: 'Lol lets talk about this', likesCount: 2 },\r\n        { id: 3, message: 'Please delete this message(', likesCount: 12 },\r\n    ],\r\n    profile: [],\r\n    userStatus: ''\r\n\r\n};\r\n\r\nexport const profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                postsData: [...state.postsData, { id: 4, message: action.text, likesCount: 0 }],\r\n                newPostText: ''\r\n\r\n            };\r\n        case SET_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        case SET_USER_STATUS:\r\n            return {\r\n                ...state,\r\n                userStatus: action.userStatus\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPost = (text) => ({ type: ADD_POST, text })\r\nexport const setProfile = (profile) => ({ type: SET_PROFILE, profile })\r\nexport const setUserStatus = (userStatus) => ({ type: SET_USER_STATUS, userStatus })\r\n\r\nexport const getUserProfile = (userID) => {\r\n    return async (dispatch) => {\r\n        let response = await profileApi.getProfile(userID);\r\n        dispatch(setProfile(response.data));\r\n    }\r\n}\r\n\r\nexport const requestUserStatus = (userID) => {\r\n    return async (dispatch) => {\r\n        let response = await profileApi.requestUserStatus(userID);\r\n        dispatch(setUserStatus(response.data));\r\n    }\r\n}\r\n\r\nexport const updateUserStatus = (body) => {\r\n    return async (dispatch) => {\r\n        let response = await profileApi.updateUserStatus(body);\r\n        \r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setUserStatus(body));\r\n        }\r\n    }\r\n}\r\n\r\nexport default profileReducer","import { usersApi } from \"../api/api\"\r\n\r\nconst FOLLOW = 'users/FOLLOW';\r\nconst UNFOLLOW = 'users/UNFOLLOW';\r\nconst SET_USERS = 'users/SET-USERS';\r\nconst SET_CURRENT_PAGE = 'users/SET-CURRENT-PAGE';\r\nconst SET_MAX_USERS_COUNT = 'users/SET-MAX-USERS-COUNT';\r\nconst IS_FETCHING = 'users/IS-FETCHING';\r\nconst IS_FOLLOWING_PROCESS = 'users/IS_FOLLOWING_PROCESS';\r\n\r\nlet initialState = {\r\n    users: [],\r\n    maxUsersCount: 200,\r\n    maxPageSize: 5,\r\n    currentPageNumber: 1,\r\n    isFetching: false,\r\n    isFollowingProcess: [],\r\n};\r\n\r\nexport const usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userID) {\r\n                        return { ...user, followed: true };\r\n                    }\r\n                    return user;\r\n                })\r\n            };\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userID) {\r\n                        return { ...user, followed: false }\r\n                    }\r\n                    return user;\r\n                })\r\n            };\r\n        case SET_USERS:\r\n            return {\r\n                ...state, users: [...action.users]\r\n            };\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state, currentPageNumber: action.currentPageNumber\r\n            };\r\n        case SET_MAX_USERS_COUNT:\r\n            return {\r\n                ...state, maxUsersCount: action.maxUsersCount\r\n            };\r\n        case IS_FETCHING:\r\n            return {\r\n                ...state, isFetching: action.isFetching,\r\n            };\r\n        case IS_FOLLOWING_PROCESS:\r\n            return {\r\n                ...state,\r\n                isFollowingProcess: action.isFollowingProcess\r\n                    ? [...state.isFollowingProcess, action.userID]\r\n                    : state.isFollowingProcess.filter(id => id !== action.userID)\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const follow = (userID) => ({ type: FOLLOW, userID })\r\nexport const unfollow = (userID) => ({ type: UNFOLLOW, userID })\r\nexport const setUsers = (users) => ({ type: SET_USERS, users })\r\nexport const setCurrentPage = (currentPageNumber) => ({ type: SET_CURRENT_PAGE, currentPageNumber })\r\nexport const setMaxUsersCount = (maxUsersCount) => ({ type: SET_MAX_USERS_COUNT, maxUsersCount })\r\nexport const isFetchingChange = (isFetching) => ({ type: IS_FETCHING, isFetching })\r\nexport const isFollowingProcessChange = (isFollowingProcess, userID) => ({ type: IS_FOLLOWING_PROCESS, isFollowingProcess, userID })\r\n\r\nexport const getUsers = (currentPageNumber, maxPageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(isFetchingChange(true));\r\n        let response = await usersApi.getUsers(currentPageNumber, maxPageSize);\r\n        dispatch(setUsers(response.data.items));\r\n        dispatch(setMaxUsersCount(response.data.totalCount));\r\n        dispatch(isFetchingChange(false));\r\n    }\r\n}\r\n\r\nexport const followUser = (userID) => {\r\n    return async (dispatch) => {\r\n        let response = await usersApi.followUser(userID);\r\n        dispatch(isFollowingProcessChange(true, userID));\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(follow(userID));\r\n            dispatch(isFollowingProcessChange(false, userID));\r\n        }\r\n    }\r\n}\r\n\r\nexport const unfollowUser = (userID) => {\r\n    return async (dispatch) => {\r\n        let response = await usersApi.unfollowUser(userID);\r\n        dispatch(isFollowingProcessChange(true, userID));\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(unfollow(userID));\r\n            dispatch(isFollowingProcessChange(false, userID));\r\n        }\r\n    }\r\n}\r\n\r\nexport default usersReducer","const ADD_MESSAGE = 'dialogs/ADD-MESSAGE';\r\n\r\nlet initialState = {\r\n    usersData: [\r\n        { id: 1, name: 'David' },\r\n        { id: 2, name: 'Dima' },\r\n        { id: 3, name: 'Valera' },\r\n    ],\r\n\r\n    messagesData: [\r\n        { id: 1, message: 'Hello' },\r\n        { id: 2, message: 'Good bye' },\r\n        { id: 3, message: 'Yo!' },\r\n    ],\r\n\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            return {\r\n                ...state,\r\n                messagesData: [...state.messagesData, { id: 4, message: action.message }],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addMessage = (message) => ({ type: ADD_MESSAGE, message });\r\n\r\nexport default dialogsReducer;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import './News.scss';\r\n\r\nconst News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default News;","import './Settings.scss';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Settings;","import './Music.scss';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Music;","import './FriendsItem.scss';\r\n\r\nconst FriendsItem = (props) => {\r\n    return (\r\n        <div className='friendsItem'>\r\n            {props.name}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FriendsItem;","import './FriendsBar.scss';\r\nimport FriendsItem from './FriendsItem/FriendsItem';\r\n\r\nconst FriendsBar = (props) => {\r\n\r\n    let friendsElements = props.friendsData\r\n        .map(el => <FriendsItem id={el.id} name={el.name} />);\r\n    return (\r\n\r\n        <div className='friendsBar'>\r\n            <h2>Friends</h2>\r\n            <div className='friendsBar__row'>\r\n                {/* {friendsElements} */}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FriendsBar;","import { NavLink } from 'react-router-dom';\r\nimport './Nav.scss';\r\nimport FriendsBarContainer from './FriendsBar/FriendsBarContainer';\r\n\r\nconst Nav = (props) => {\r\n    return (\r\n        <nav className='nav'>\r\n            <ul>\r\n                <li> <NavLink className={navData => navData.isActive ? 'nav__link_active' : 'nav__link'} to='/profile'>Profile</NavLink> </li>\r\n                <li> <NavLink className={navData => navData.isActive ? 'nav__link_active' : 'nav__link'} to='/users'>Users</NavLink> </li>\r\n                <li> <NavLink className={navData => navData.isActive ? 'nav__link_active' : 'nav__link'} to='/dialogs'>Messages</NavLink> </li>\r\n                <li> <NavLink className={navData => navData.isActive ? 'nav__link_active' : 'nav__link'} to='/news'>News</NavLink> </li>\r\n                <li> <NavLink className={navData => navData.isActive ? 'nav__link_active' : 'nav__link'} to='/music'>Music</NavLink> </li>\r\n                <li> <NavLink className={navData => navData.isActive ? 'nav__link_active' : 'nav__link'} to='/settings'>Settings</NavLink> </li>\r\n            </ul>\r\n            {/* <FriendsBarContainer /> */}\r\n        </nav>\r\n    \r\n    );\r\n}\r\n\r\nexport default Nav;","import FriendsBar from './FriendsBar';\r\nimport './FriendsBar.scss';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        friendsData: state.sidebar.friendsData\r\n    };\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n\r\n    };\r\n}\r\n\r\nconst FriendsBarContainer = connect(mapStateToProps, mapDispatchToProps)(FriendsBar);\r\n\r\n\r\n\r\nexport default FriendsBarContainer;","export default __webpack_public_path__ + \"static/media/logo.66a2eed2.jpg\";","import './Header.scss';\r\nimport userPhoto from '../../assets/images/userPhoto.png';\r\nimport logo from '../../assets/images/logo.jpg'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst Header = ({\r\n    isAuth,\r\n    login,\r\n    logout }) => {\r\n\r\n    return (\r\n        <header className='header'>\r\n            <div>\r\n                <a href=\"#\">\r\n                    <img className='header__logo' src={logo} alt='Logo'></img>\r\n                </a>\r\n            </div>\r\n            <div className='header__userBlock'>\r\n                {isAuth\r\n                    ? <div>{login}<button \r\n                    onClick={logout}>Logout</button></div>\r\n                    : <NavLink to={'/login'}>Login</NavLink>\r\n                }\r\n                <img src={userPhoto} alt=\"\" />\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import { authApi } from \"../api/api\";\r\n\r\nconst SET_DATA = 'auth/SET_DATA';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n                // isAuth: action.isAuth\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setData = (id, email, login, isAuth) => ({ type: SET_DATA, data: { id, email, login, isAuth } });\r\n\r\nexport const authProcess = () => {\r\n    return async (dispatch) => {\r\n        let response = await authApi.auth();\r\n\r\n        if (response.data.resultCode === 0) {\r\n            let { id, email, login } = response.data.data;\r\n            dispatch(setData(id, email, login, true));\r\n        }\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => {\r\n    return async (dispatch) => {\r\n        let response = await authApi.login(email, password, rememberMe);\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(authProcess());\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    return async (dispatch) => {\r\n        let response = await authApi.logout();\r\n\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setData(null, null, null, false));\r\n        }\r\n    }\r\n}\r\n\r\nexport default authReducer","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Header from \"./Header\";\r\nimport { logout } from \"../../redux/authReducer\";\r\nimport { getIsAuth, getLogin } from \"../../selectors/auth-selector\";\r\n\r\nconst HeaderContainer = (props) => {\r\n        return <Header {...props} />\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: getIsAuth(state),\r\n        login: getLogin(state),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    logout\r\n})(HeaderContainer)","import { Formik } from \"formik\";\r\nimport './LoginForm.scss';\r\n\r\nconst LoginForm = ({ login }) => {\r\n    return (\r\n        <Formik\r\n            initialValues={{ email: '', password: '', checkbox: false, }}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n                setSubmitting(false);\r\n                login(values.email, values.password, values.checkbox);\r\n            }}>\r\n            {({\r\n                values,\r\n                handleChange,\r\n                handleSubmit,\r\n                isSubmitting,\r\n            }) =>\r\n            (<form onSubmit={handleSubmit}>\r\n                <input\r\n                    className='login__text login__input'\r\n                    type={'email'}\r\n                    name=\"email\"\r\n                    placeholder=\"Email\"\r\n                    onChange={handleChange}\r\n                    value={values.email}\r\n                />\r\n                <input\r\n                    className='login__text login__input'\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"Password\"\r\n                    onChange={handleChange}\r\n                    value={values.password}\r\n                />\r\n                <div className='login__checkbox'>\r\n                    Stay in\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        name=\"checkbox\"\r\n                        onChange={handleChange}\r\n                        value={values.checkbox}\r\n                    />\r\n                </div>\r\n                <button\r\n                    className=\"login__button login__input\"\r\n                    type=\"submit\"\r\n                    disabled={isSubmitting}\r\n                >\r\n                    Submit\r\n                </button>\r\n            </form>)}\r\n\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","import { connect } from 'react-redux';\r\nimport { Navigate } from 'react-router-dom';\r\nimport './Login.scss';\r\nimport LoginForm from './LoginForm/LoginForm';\r\nimport { login } from '../../redux/authReducer';\r\nimport { getIsAuth } from '../../selectors/auth-selector';\r\n\r\nconst Login = ({ isAuth, login, }) => {\r\n    if (isAuth === true) {\r\n        return <Navigate to={'/profile'} />\r\n    }\r\n\r\n    return (\r\n        <div className='login'>\r\n            <div className='login__block'>\r\n                <h1>Login</h1>\r\n                <LoginForm login={login} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: getIsAuth(state)\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    login\r\n})(Login)","import { authProcess } from \"./authReducer\";\r\n\r\nconst INITIAL_PROCESS = 'app/INITIAL_PROCESS';\r\n\r\nlet initialState = {\r\n    isInitialized: false\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIAL_PROCESS:\r\n            return {\r\n                ...state,\r\n                isInitialized: true\r\n            };\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const initialProcess = () => ({ type: INITIAL_PROCESS })\r\n\r\nexport const initialization = () => {\r\n    return (dispatch) => {\r\n        let promise = dispatch(authProcess());\r\n\r\n        Promise.all([promise]).then(() => {\r\n            dispatch(initialProcess());\r\n        })\r\n\r\n    }\r\n}\r\n\r\nexport default appReducer\r\n","import './App.css';\nimport './nullstyle.css';\nimport React, { useEffect } from 'react';\nimport News from './components/News/News';\nimport Settings from './components/Settings/Settings';\nimport Music from './components/Music/Music';\nimport { Route, Routes, Navigate } from 'react-router-dom';\nimport Nav from './components/Nav/Nav';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport Login from './components/Login/Login';\nimport { connect } from 'react-redux';\nimport { initialization } from './redux/appReducer';\nimport Preloader from './components/Common/Preloader/Preloader';\n\n\n//imports for lazy loading\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst UsersContainer = React.lazy(() => import('./components/Users/UsersContainer'));\n\nconst App = (props) => {\n  useEffect(() => {\n    props.initialization();\n  }, [])\n\n  if (!props.isInitialized) {\n    return <Preloader />\n  }\n\n  return (\n    <div className='wrapper'>\n      <HeaderContainer />\n      <Nav />\n      <div className='wrapper__main'>\n        <React.Suspense fallback={<Preloader />}>\n          <Routes>\n            <Route path='/profile/' element={<ProfileContainer />} />\n            <Route path='/profile/:id' element={<ProfileContainer />}></Route>\n            <Route path='/users' element={<UsersContainer />}></Route>\n            <Route path='/dialogs/*' element={<DialogsContainer />}></Route>\n            <Route path='/news/*' element={<News />}></Route>\n            <Route path='/music/*' element={<Music />}></Route>\n            <Route path='/settings/*' element={<Settings />}></Route>\n            <Route path='*' element={<Navigate to=\"/profile\" replace />}></Route>\n            <Route path='/login/*' element={<Login />}></Route>\n          </Routes>\n        </React.Suspense>\n      </div>\n    </div>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isInitialized: state.app.isInitialized\n  }\n}\n\nexport default connect(mapStateToProps, {\n  initialization\n})(App);\n","let initialState = {\r\n    friendsData: [\r\n        { name: 'John' },\r\n        { name: 'Nick' },\r\n        { name: 'Bob' },\r\n    ]\r\n};\r\n\r\nexport const sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;\r\n","import dialogsReducer from './dialogsReducer';\r\nimport profileReducer from './profileReducer';\r\nimport sidebarReducer from './sidebarReducer';\r\nimport usersReducer from './usersReducer';\r\nimport authReducer from './authReducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport appReducer from './appReducer';\r\n\r\nconst { createStore, combineReducers, applyMiddleware } = require(\"redux\");\r\n\r\nlet reducers = combineReducers({\r\n    dialogsPage: dialogsReducer,\r\n    profilePage: profileReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store = store;\r\n\r\nexport default store","import './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport store from './redux/store-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}