{"version":3,"sources":["components/Profile/UserInfo/UserStatus/UserStatus.jsx","components/Profile/UserInfo/UserInfo.jsx","components/Profile/MyPosts/NewPost/AddPostForm/AddPostForm.jsx","components/Profile/MyPosts/NewPost/NewPost.jsx","components/Profile/MyPosts/NewPost/NewPostContainer.jsx","components/Profile/MyPosts/Contacts/Contact/Contact.jsx","components/Profile/MyPosts/Contacts/Contacts.jsx","assets/images/like.png","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/Profile.jsx","selectors/profile-selector.js","components/Profile/ProfileContainer.jsx"],"names":["UserStatus","userStatus","setUserStatus","updateUserStatus","currentID","isAuth","useState","editMode","changeMode","onChange","e","currentTarget","value","autoFocus","onBlur","className","type","onDoubleClick","UserInfo","profile","savePhoto","photos","Preloader","src","large","userPhoto","alt","target","files","fullName","lookingForAJob","lookingForAJobDescription","AddPostForm","props","initialValues","postText","onSubmit","values","text","setSubmitting","addPost","handleChange","handleSubmit","isSubmitting","name","disabled","NewPost","NewPostContainer","connect","Contact","contact","href","state","profilePage","contacts","contactsList","Object","entries","map","Post","message","likeImage","width","likesCount","postsData","el","id","Profile","getProfile","getUserStatus","compose","getIsAuth","setProfile","isFetchingChange","getUserProfile","requestUserStatus","setCurrentID","useParams","useEffect"],"mappings":"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","file":"static/js/3.249fa04a.chunk.js","sourcesContent":["import './UserStatus.scss';\r\nimport React, { useState } from 'react';\r\n\r\n\r\nconst UserStatus = ({\r\n    userStatus,\r\n    setUserStatus,\r\n    updateUserStatus,\r\n    currentID,\r\n    isAuth }) => {\r\n\r\n    const [editMode, changeMode] = useState(false);\r\n\r\n    let onChangeStatus = (e) => {\r\n        setUserStatus(e.currentTarget.value);\r\n    }\r\n\r\n    let finishEdit = (e) => {\r\n        changeMode(false)\r\n        updateUserStatus(e.currentTarget.value);\r\n    }\r\n\r\n    if (!isAuth && currentID == 23462) {\r\n        return <span>No status</span>\r\n    }\r\n\r\n    if (currentID != 23462) {\r\n        return <span>{userStatus != null\r\n            ? userStatus\r\n            : 'No status'}</span>\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode\r\n                ? <div>\r\n                    <span onDoubleClick={() => changeMode(true)}>{userStatus != null\r\n                        ? userStatus\r\n                        : 'No status'}</span>\r\n                </div>\r\n\r\n                : <div>\r\n                    <input onChange={onChangeStatus} autoFocus={true} onBlur={finishEdit} value={userStatus != null\r\n                        ? userStatus\r\n                        : 'No status'} className='input' type=\"text\" />\r\n                </div>\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default UserStatus","import './UserInfo.scss';\r\nimport userPhoto from '../../../assets/images/userPhoto.png'\r\nimport Preloader from '../../Common/Preloader/Preloader';\r\nimport UserStatus from './UserStatus/UserStatus';\r\n\r\nconst UserInfo = ({\r\n    profile,\r\n    userStatus,\r\n    updateUserStatus,\r\n    setUserStatus,\r\n    currentID,\r\n    isAuth,\r\n    savePhoto }) => {\r\n\r\n    if (!profile || !profile.photos) {\r\n        return <Preloader />\r\n    }\r\n\r\n    const onChangePhoto = (e) => {\r\n        savePhoto(e.target.files[0])\r\n    }\r\n\r\n    return (\r\n        <div className='userInfo'>\r\n            <div className='userInfo__name'>\r\n                <div className='userInfo__photoBlock'>\r\n                    \r\n                    <img src={profile.photos.large != null && isAuth === true\r\n                        ? profile.photos.large\r\n                        : userPhoto} alt=\"\" />\r\n\r\n                    {isAuth === true && currentID == '23462'\r\n                        ? <input className='userInfo__photoUpload' type=\"file\" onChange={onChangePhoto} />\r\n                        : null}\r\n                </div>\r\n\r\n                <h2>{!isAuth && currentID == '23462' ? 'Test user' : profile.fullName}</h2>\r\n                <UserStatus userStatus={userStatus}\r\n                    updateUserStatus={updateUserStatus}\r\n                    setUserStatus={setUserStatus}\r\n                    currentID={currentID}\r\n                    isAuth={isAuth} />\r\n            </div>\r\n            <div className='userInfo__block'>\r\n                <div className='userInfo__city'>\r\n                    <h2>Looking for a job: {profile.lookingForAJob === true\r\n                        ? 'Yes'\r\n                        : 'No'}</h2>\r\n                </div>\r\n                <div className=\"userInfo__birthdate\">\r\n                    <h2>Description: {profile.lookingForAJobDescription === true\r\n                        ? profile.lookingForAJobDescription\r\n                        : 'No'}</h2>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default UserInfo;","import './AddPostForm.scss';\r\nimport { Formik } from 'formik';\r\n\r\nconst AddPostForm = (props) => {\r\n\r\n    let addPost = (text) => {\r\n        props.addPost(text);\r\n    }\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{ postText: '' }}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n                addPost(values.postText);\r\n                values.postText = '';\r\n                setSubmitting(false);\r\n\r\n            }}>\r\n            {({\r\n                values,\r\n                handleChange,\r\n                handleSubmit,\r\n                isSubmitting\r\n            }) =>\r\n            (<form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <input\r\n                        className=\"newPost__input\"\r\n                        type=\"text\"\r\n                        name=\"postText\"\r\n                        onChange={handleChange}\r\n                        value={values.postText}\r\n                    />\r\n                </div>\r\n                {/* <Button\r\n                    endIcon={<PostAddIcon />}\r\n                    className='action-btn'\r\n                    variant='contained'\r\n                    type=\"submit\"\r\n                    disabled={isSubmitting}\r\n                >\r\n                    Добавить пост\r\n                </Button> */}\r\n                <button\r\n                    className=\"newPost__button button\"\r\n                    type=\"submit\"\r\n                    disabled={isSubmitting}\r\n                >\r\n                    Add post\r\n                </button>\r\n\r\n            </form>)}\r\n        </Formik>\r\n    )\r\n}\r\n\r\n{/* <button\r\nclassName=\"newPost__button button\"\r\ntype=\"submit\"\r\ndisabled={isSubmitting}\r\n>\r\nДобавить пост\r\n</button> */}\r\n\r\nexport default AddPostForm","import './NewPost.scss';\r\nimport React from 'react';\r\nimport AddPostForm from './AddPostForm/AddPostForm';\r\n\r\nconst NewPost = ({ addPost }) => {\r\n    return (\r\n        <AddPostForm addPost={addPost} />\r\n    );\r\n}\r\n\r\nexport default NewPost;","import { connect } from 'react-redux';\r\nimport { addPost } from '../../../../redux/profileReducer';\r\nimport NewPost from './NewPost';\r\n\r\nconst NewPostContainer = connect(null, {\r\n    addPost\r\n})(NewPost);\r\n\r\nexport default NewPostContainer;","import './Contact.scss';\r\n\r\nconst Contact = ({ contact }) => {\r\n    return (\r\n        <li className='contact'>\r\n            {`${contact[0]}: ${contact[1] === null\r\n                ? 'no'\r\n                : <a href={contact[1]}>link</a>}`}\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Contact;","import { connect } from 'react-redux';\r\nimport Preloader from '../../../Common/Preloader/Preloader';\r\nimport './Contacts.scss';\r\nimport Contact from './Contact/Contact';\r\n\r\nconst Contacts = ({\r\n    profile,\r\n    isAuth,\r\n    currentID\r\n}) => {\r\n\r\n    if (!profile.contacts && !isAuth ) {\r\n        return (<div className='contacts'>\r\n            <h1>Contacts</h1>\r\n            <ul className='contacts__list'>\r\n                <li>Github: no</li>\r\n                <li>VK: no</li>\r\n                <li>Facebook: no</li>\r\n                <li>Instagram: no</li>\r\n                <li>Twitter: no</li>\r\n                <li>Website: no</li>\r\n                <li>YouTube: no</li>\r\n                <li>mainLink: no</li>\r\n            </ul>\r\n        </div>)\r\n    }\r\n\r\n    if (!profile.contacts && isAuth) {\r\n        return <Preloader />;\r\n    }\r\n\r\n    let contactsList = Object.entries(profile.contacts).map(contact => {\r\n        return <Contact contact={contact} />\r\n    })\r\n\r\n    return (\r\n        <div className='contacts'>\r\n            <h1>Contacts</h1>\r\n            <ul className='contacts__list'>\r\n                {contactsList}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(Contacts) ","export default __webpack_public_path__ + \"static/media/like.d6e9a73c.png\";","import './Post.scss';\r\nimport userPhoto from '../../../../assets/images/userPhoto.png';\r\nimport likeImage from '../../../../assets/images/like.png';\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className='post'>\r\n            <div className='post__row'>\r\n                <div className='post__img'>\r\n                    <img src={userPhoto} alt=\"\" />\r\n                </div>\r\n                <div className='post__text'>\r\n                    {props.message} <img src={likeImage} width=\"20px\" alt=\"likes\" /> {props.likesCount}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import './MyPosts.scss';\r\nimport NewPostContainer from './NewPost/NewPostContainer';\r\nimport Contacts from './Contacts/Contacts';\r\nimport { connect } from 'react-redux';\r\nimport Post from './Post/Post';\r\n\r\nconst MyPosts = ({\r\n    postsData,\r\n    profile,\r\n    isAuth,\r\n    currentID }) => {\r\n\r\n    return (\r\n        <div className='myPosts'>\r\n            <div className='myPosts__posts'>\r\n                <NewPostContainer />\r\n                {postsData}\r\n            </div>\r\n            <div className='myPosts__block'>\r\n                <Contacts profile={profile}\r\n                    isAuth={isAuth}\r\n                    currentID={currentID} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        // profile: state.profilePage.profile,\r\n        postsData: state.profilePage.postsData\r\n            .map(el => <Post key={el.id} message={el.message} likesCount={el.likesCount} />)\r\n    };\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(MyPosts);","import './Profile.scss';\r\nimport UserInfo from './UserInfo/UserInfo';\r\nimport MyPosts from './MyPosts/MyPosts';\r\n\r\nconst Profile = ({\r\n    profile,\r\n    userStatus,\r\n    updateUserStatus,\r\n    setUserStatus,\r\n    currentID,\r\n    isAuth,\r\n    savePhoto }) => {\r\n\r\n    return (\r\n        <div className='profile'>\r\n            <UserInfo profile={profile}\r\n                userStatus={userStatus}\r\n                updateUserStatus={updateUserStatus}\r\n                setUserStatus={setUserStatus}\r\n                currentID={currentID} \r\n                isAuth={isAuth}\r\n                savePhoto={savePhoto}/>\r\n            <MyPosts profile={profile}\r\n                isAuth={isAuth}\r\n                currentID={currentID}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","export const getProfile = (state) => state.profilePage.profile\r\n\r\nexport const getUserStatus = (state) => state.profilePage.userStatus","import React, { useState, useEffect } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n    setProfile,\r\n    getUserProfile,\r\n    requestUserStatus,\r\n    updateUserStatus,\r\n    setUserStatus,\r\n    savePhoto\r\n} from '../../redux/profileReducer';\r\nimport Profile from './Profile';\r\nimport { isFetchingChange } from '../../redux/usersReducer';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { useParams } from \"react-router-dom\";\r\nimport {\r\n    getProfile,\r\n    getUserStatus,\r\n} from '../../selectors/profile-selector';\r\nimport { getIsAuth } from '../../selectors/auth-selector';\r\n\r\nconst ProfileContainer = ({ \r\n    getUserProfile, \r\n    requestUserStatus, \r\n    profile, \r\n    userStatus, \r\n    updateUserStatus, \r\n    setUserStatus,\r\n    isAuth,\r\n    savePhoto }) => {\r\n\r\n    const [currentID, setCurrentID] = useState(null);\r\n\r\n    let { id } = useParams();\r\n    useEffect(() => {\r\n        if (!id) {\r\n            id = '23462';\r\n        }\r\n        getUserProfile(id);\r\n        requestUserStatus(id);\r\n        setCurrentID(id)\r\n    }, [id])\r\n\r\n    return (\r\n        <div className='profile'>\r\n            <Profile \r\n                profile={profile}\r\n                userStatus={userStatus}\r\n                updateUserStatus={updateUserStatus}\r\n                setUserStatus={setUserStatus} \r\n                currentID={currentID}\r\n                isAuth={isAuth}\r\n                savePhoto={savePhoto}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: getProfile(state),\r\n        isAuth: getIsAuth(state),\r\n        userStatus: getUserStatus(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        setProfile,\r\n        isFetchingChange,\r\n        getUserProfile,\r\n        requestUserStatus,\r\n        updateUserStatus,\r\n        setUserStatus,\r\n        savePhoto\r\n    }),\r\n    // withAuthRedirect\r\n)(ProfileContainer)\r\n"],"sourceRoot":""}